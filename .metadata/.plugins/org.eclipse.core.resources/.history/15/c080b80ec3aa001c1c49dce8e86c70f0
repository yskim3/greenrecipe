package com.greenrecipe.main.member.service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.mybatis.spring.SqlSessionTemplate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.ui.Model;

import com.greenrecipe.main.member.dto.BuyerDTO;
import com.greenrecipe.main.mybatis.member.MemberMapper;

@Service
public class MemberServiceImpl implements MemberService {
	
	@Autowired MemberMapper mapper;
	
	@Autowired SqlSessionTemplate sqlSessionTemplate;
	
	
	// password 암호화
	
	BCryptPasswordEncoder en = new BCryptPasswordEncoder();
	
	public int buyerIdCheck(HttpServletRequest req) {
		
		System.out.println("TEST2");
		System.out.println(req.getParameter("buyer_id"));
		// BuyerDTO buyerdto = sqlSessionTemplate.selectList("MemberMapper.buyerIdCheck", req.getParameter("buyer_id");)
		// BuyerDTO buyerdto = mapper.buyerIdCheck(req.getParameter("buyer_id"));
		
		System.out.println("TEST3");
		System.out.println(buyerdto);
		if(buyerdto != null) {
			
			if(en.matches(req.getParameter("buyer_password"), buyerdto.getBuyer_password()) || buyerdto.getBuyer_password().equals(req.getParameter("buyer_password"))) {
			// if(dto.getPw().equals(req.getParameter("pw")) ) {
				
				// matches로 비교
				
				return 0;
				
			}
			
		}
		return 1;
	}
	/*
	public void memberInfo(Model model) {
		model.addAttribute("memberList",mapper.memberInfo());
	}
	*/
	public void buyer_info(String buyer_id, Model model) {
		BuyerDTO buyerdto = mapper.buyerIdCheck(buyer_id);
		System.out.println(buyerdto.getBuyer_id());
		System.out.println(buyerdto.getBuyer_name());
		System.out.println(buyerdto.getBuyer_phone());
		System.out.println(buyerdto.getBuyer_addr());
		model.addAttribute("buyer_info", buyerdto);
	}
	
	public int register(BuyerDTO buyerdto) {
		System.out.println("암호화 전 : " + buyerdto.getBuyer_password());
		String SecurityBuyer_password = en.encode(buyerdto.getBuyer_password());
		System.out.println("암호화 후 : " + SecurityBuyer_password);
		buyerdto.setBuyer_password(SecurityBuyer_password);
		
		// database에 추가
		
		buyerdto.setBuyer_sessionId("null");
	
		try {
			return mapper.register(buyerdto);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return 0;
	}
	
	public void keepLogin(String buyer_sessionId, java.sql.Date buyer_limiteDate, String buyer_id) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("buyer_sessionId", buyer_sessionId);
		map.put("buyer_limitDate", buyer_limiteDate);
		map.put("buyer_id", buyer_id);
		mapper.keepLogin(map);
	}
	
	public BuyerDTO getBuyerSession(String buyersessionId) {
		return mapper.getBuyerSession(buyersessionId);
	}
	
}